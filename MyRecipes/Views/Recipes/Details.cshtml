@model MyRecipes.ViewModels.RecipeDetailsModel;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    Layout = "_Layout";
}

@section Styles{
    <link href="~/css/Recipes/details.css" rel="stylesheet"/>
}

<div class="row">
    <div class="col-md-9">
        <img style="width:100%" src="@Model.ImageUrl" />
        <h1 style="text-align:center">@Model.Title</h1>
        <p style="text-align:center">@Model.Description</p>

        <h2 class="label">Ingredients</h2>
        <p>@Model.Ingredients</p>

        <h2>Directions:</h2>
        <p>@Model.Directions</p>

        <h2>Date created:</h2>
        <p>@Model.DateCreated</p>

        <p>Likes: <span id="likeCountContainer">@Model.RecipeLikes.Where(x => x.Status == true).Count()</span></p>
        <p>Dislikes: <span id="dislikeCountContainer">@Model.RecipeLikes.Where(x => x.Status == false).Count()</span> </p>

        @if (User.Identity.IsAuthenticated)
        {
            if (Model.LikeStatus == MyRecipes.ViewModels.RecipeLikeStatus.None)
            {
                <button id="btnAddLike" class="btn btn-outline-success" onclick="RecipeLike(@Model.Id)">Like</button>
                <button id="btnRemoveLike" class="btn btn-success displayNone" onclick="RemoveRecipeLike(@Model.Id)">Unlike</button>
                <button id="btnAddDislike" class="btn btn-outline-danger" onclick="RecipeDislike(@Model.Id)">Dislike</button>
                <button id="btnRemoveDislike" class="btn btn-danger displayNone" onclick="RemoveRecipeDislike(@Model.Id)">Undislike</button>
            }

            if (Model.LikeStatus == MyRecipes.ViewModels.RecipeLikeStatus.Liked)
            {
                <button id="btnAddLike" class="btn btn-outline-success displayNone" onclick="RecipeLike(@Model.Id)">Like</button>
                <button id="btnRemoveLike" class="btn btn-success" onclick="RemoveRecipeLike(@Model.Id)">Unlike</button>
                <button id="btnAddDislike" class="btn btn-outline-danger" onclick="RecipeDislike(@Model.Id)">Dislike</button>
                <button id="btnRemoveDislike" class="btn btn-danger displayNone" onclick="RemoveRecipeDislike(@Model.Id)">Undislike</button>
            }

            if (Model.LikeStatus == MyRecipes.ViewModels.RecipeLikeStatus.Disliked)
            {
                <button id="btnAddLike" class="btn btn-outline-success" onclick="RecipeLike(@Model.Id)">Like</button>
                <button id="btnRemoveLike" class="btn btn-success displayNone" onclick="RemoveRecipeLike(@Model.Id)">Unlike</button>
                <button id="btnAddDislike" class="btn btn-outline-danger displayNone" onclick="RecipeDislike(@Model.Id)">Dislike</button>
                <button id="btnRemoveDislike" class="btn btn-danger" onclick="RemoveRecipeDislike(@Model.Id)">Undislike</button>
            }
        }

        <h1>Comments:</h1>
        @if (User.Identity.IsAuthenticated)
        {
            <form asp-controller="RecipeComments" asp-action="Add" method="post" onsubmit="return ValidateComment()">
                <input id="recipeId" name="recipeId" value="@Model.Id" hidden />
                <div class="form-group">
                    <textarea id="comment" name="comment" class="form-control"> </textarea>
                </div>
                <button type="submit" class="btn btn-primary">Comment</button>
            </form>
        }

        @foreach (var comment in Model.RecipeComments)
        {
            <p>@comment.Comment - @comment.DateCreated - @comment.Username</p>
        }
    </div>
    <div class="col-md-3">
        <partial name="SidebarPartial" for="SidebarData" />
    </div>
</div>

@section Scripts{
    <script src="~/lib/axios/axios.min.js"></script>
    <script src="~/js/custom/recipedetails.js"> </script>
}

